# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    download_dir:   '../public/'
    param: "some parameter"
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
    App\Controller\DefaultController:
        bind:
            $logger:  '@monolog.logger.doctrine'
    app.myservice:
        #alias must provide class name
        class: App\Services\MyService
        properties:
         # Work on methods not __construct
            my: '@App\Services\MySecondService'
            logger:  '@monolog.logger'
        arguments:
            $param: '%param%'
            $second_param: '@App\Services\MySecondService'
        tags:
            - {name : doctrine.event_listener, event: postFlush}
           # - {name : kernel.cache_clearer}
            # postFlush  will execute when  doctrine.event_listener fired

    App\Services\MyService: '@app.myservice' #aliases
    
    App\Services\ServiceInterface:  '@App\Services\MyService'

    App\Services\KernelResponseListener:
        #  tags:
        #     - {name : kernel.event_listener, event: kernel.response}
    App\Listeners\VideoCreatedListener:
         tags:
            - {name : kernel.event_listener, event: video.created.event, method: OnVideoCreatedEvent}
    

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
